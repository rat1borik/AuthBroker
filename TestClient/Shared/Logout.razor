@page "/logout"

@using TestClient.Authentication
@using AuthBrokerClient

@inject NavigationManager navManager;
@inject IHttpClientFactory ClientFactory
@inject IConfiguration cfg
@inject AuthTokenProvider atp

<span>@Loc["Logging out"]</span>

@code {
	[Inject] protected ToastService ToastService { get; set; }

	protected override async Task OnInitializedAsync() {
		var customAuthStateProvider = (CustomAuthenticationStateProvider)asp;
		if (!(await customAuthStateProvider.GetAuthenticationStateAsync()).IsAnonymous()) {
			if (!await atp.Invalidate((await customAuthStateProvider.GetAuthenticationStateAsync()).User.Claims.Where(cl => cl.Type == "access_token").FirstOrDefault().Value)) {
				ToastService.Notify(new ToastMessage(ToastType.Danger, Loc["Some error occured"]));
			}

			await customAuthStateProvider.UpdateAuthenticationState();
			navManager.NavigateTo("/auth", true);
		}
	}
}
