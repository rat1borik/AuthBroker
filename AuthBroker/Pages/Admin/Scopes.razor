@page "/grants"
@attribute [Authorize(Roles = "Admin")]


<PageTitle>@Loc["Admin panel: Scopes"]</PageTitle>

@using AuthBroker.Models
@inject ScopeStore gs

<!-- Modal -->
<div class="modal fade" id="addModal" tabindex="-1" aria-labelledby="addModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addModalLabel">@Loc["Add new scope"]</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
        <form>
          <div class="modal-body mb-3">
            <label for="recipient-name" class="col-form-label" >@Loc["Name"]</label>
            <input  type="text" class="form-control" id="recipient-name" @bind="@formName" required>
              </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Loc["Close"]</button>
            <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="@Add">@Loc["Save"]</button>
          </div>
        </form>
    </div>
  </div>
</div>

    <h1>@Loc["Scopes"]</h1>

@if (scopes == null) {
        <p><em>@Loc["Loading..."]</em></p>
} else {
        

            <table class="table table-hover">
        <thead>
            <tr>
                    <th>@Loc["Scope name"]</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var gr in scopes) {
                <tr>
                    <td class="align-middle">@gr.Name</td>
                     <td class="d-flex justify-content-end"><button class="btn btn-dark" @onclick="() => Remove(gr)"><span class="oi oi-trash"></span></button></td>
                </tr>
            }
        </tbody>
    </table>

    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addModal">
        @Loc["Add"]
    </button>              
}

@code {
    private string formName = "";
    [CascadingParameter]
    private List<Scope>? scopes { get; set; }

    protected async Task Refresh() {
        scopes = await gs.GetListAsync();
    }

    protected override async Task OnInitializedAsync() {
        await Refresh();
    }

    private async Task Add() {
        await gs.AddAsync(new Scope() { Name = formName});
        await Refresh();
    }

    private async Task Remove(Scope gr) {
        await gs.RemoveAsync(gr);
        await Refresh();
    } 
}
