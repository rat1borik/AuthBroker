
@using AuthBroker.Models
@inject AccessTokenStore ats

<div class="row">
    <table class="table table-hover">
        <thead>
            <tr>
                <th>@Loc["Ip"]</th>
                <th>@Loc["ExpiredAt"]</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (accTokens != null) 
                @foreach (var at in accTokens) {
                    <tr>
                        <td class="align-middle">@at.Ip.ToString()</td>
                        <td class="align-middle">@at.Token.ExpiredAt.ToString()</td>
                        <td class="d-flex justify-content-end"><Button Color="ButtonColor.Dark" @onclick="()=>Logout(at)"><span class="oi oi-account-logout"></span></Button></td>
                    </tr>
                }
        </tbody>
    </table>
</div>

@code {
    [Parameter]
    public Session Session { get; set; }

    private List<AccessToken>? accTokens;

    protected override async Task OnInitializedAsync() {
        await Refresh();
    }

    private async Task Refresh() {
        accTokens = await ats.GetBySession(Session);
    }

    protected async Task Logout(AccessToken at) {
        await ats.RemoveAsync(at);
        await Refresh();
    }
}